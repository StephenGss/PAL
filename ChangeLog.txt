SAIL-ON Polycraft World Change Log:

Purpose: This document tracks changes and updates to Polycraft World that impact SAIL-ON Tasks, Evaluations, etc., including API changes.

2022.09.30 Updates:
1)	(enhancement)	Speed up game resets by skipping block rendering on client side.

2022.09.12 Updates:
1)	(enhancement)	Updates to add WORKSHOP task

2022.08.04 Updates:
1)	(enhancement)	Removed a lot of old resources to reduce .jar file size
2)	(enhancement)	Increase command timout lenght, add log message when timeout occurs, and respond with timeout command response.

2022.07.28 Updates:
1)	(bug fix)		Metal blocks should only break when using a pickaxe

2022.06.17 Updates:
1)	(enhancement)	Change agent index through reset command. Ex. RESET nextgame 4
2)	(enhancement)	FW 1.0 changes. Add tournament generator to change goals periodically during a tournament. 

2022.06.10 Updates:
1)	(enhancement)	attempt to sort games list for initma command
2022.06.08 Updates:
1)	(enhancement)	Add chat command for shell agents
2)	(bug fix)		Only add ".json" files to games list on startup and INITMA command
2)	(bug fix)		Fix quantity of diamonds dropped when using break_block

2022.06.06 Updates:
1)	(enhancement)	Add thread sleep delay to agent listener thread when there is nothing to read, so we don't use up an entire cpu core per agent

2022.05.20 Updates:
1)	(enhancement)	Add tool efficiency override feature to experiments
2)	(enhancement)	Add shell axe novelty generation code
3)	(note)			Added example tournament config file for shell tournaments. This can be modified to generate custom tournaments using the gentour command.
4)	(change)		Break_block command cost 10x now

2022.05.16 Updates:
1)	(bug fix)		Override default recipes using json config

2022.04.26 Updates:
1)	(bug fix)		Fix sense_reciepes

2022.04.19 Updates:
1)	(enhancement)	INITMA command to initialize a multi-agent tournament
2)	(enhancement)	RESET nextgame will reset the game for an agent and go to the next game. No other arguments needed
3)	(enhancement)	configurable shell agent port using PAL_AGENTS_PORT
3)	(enhancement)	Agent arena position will take up the first available “slot” instead of incrementing the position every time an agent connects. This makes testing easier.
3)	(note)			Hard limit of 1000 agents in code. (this can be easily increased, I just don’t think we’ll go above 1000)
3)	(note)			Don’t need to send start command twice anymore. The second start command is now handled by INITMA
3)	(enhancement)	Added "goalSubType" to the “goal” object in command responses
						Ex. "goalSubType":"polycraft:wooden_pogo_stick"


2022.02.08 Updates:
1)	(HUGA) 	Fix Trap issue where traps will randomly capture agent when next to trap

2022.01.15 Updates:
1)	(HUGA)	Fix trap placement bug introduced from last changes

2022.01.13 Updates:
1)	(HUGA)			Guide dog navigation improvments.
2)	(API Change)	TURN and LOOK commands now center agent at 0.499 instead of 0.5. This can change the agent's location because of rounding errors.
3)	(HUGA)			Prevent Agents from placing traps on destination and perimeter blocks.	

2021.11.23 Updates:
1)	(Task Specification docs)	Uploaded POGO Task Specifications.docx and HUGA Task Specifications.docx to repo.
2)	(typo)				Corrected typos in Task Specifications for NOP command incorrectly stating "NO_OP" and that it did not advance time.
3)	(bug fix)			Fix guide dog interact [id]. Interact facing still worked, but distance calculation was inverted when using id for interact

2021.11.22 Updates:
1)	(enhancement)			Reset IDs on RESET for game replayability
2)	(enhancement)			Update GenTourn logging to be more compact
3)	(enhancement)			Only allow START to be sent once. Multiple START commands will respone in SUCCESS, but not actually be processed
4)	(enhancement/bug fix)	Fix issue where rooms were always generated in the positive direction. Now rooms will generate in all directions.
5)	(enhancement/bug fix)	Prevent rooms having pathways between each other when they shouldn't
6)	(minor change)			Adjust starting room location since rooms generating in negative direction could have caused negative player positions.
7)	(bug fix)				Fix Sapling shared novelty replacing iron pickaxe
8	(bug fix)				Trading with pogoist in shared novelty resulted in timed out command response
9)	(bug fix)				Trees cannot be placed in perimeter of a room. This is the correct logic, but command response was incorrect.

2021.11.17 Updates:
1)	(Damage Control)	A maven repo permanently shut down that Minecraft Forge relied on. Loaded most of the necessary libaries locally now.

2021.11.16 Update:
1)	(game config)	Some pre-novelty games were generated with one of the traders spawning inside a wall. This can result in an impossible game.
					This only affected POGO pre-novelty games
2)	(game config)	The easy axe novelty configs had an issue that would sometimes overwrite the pickaxe as a wooden axe. This results in an impossible game. 
					This only affected POGO_L01_T01_S01 easy difficulty
3)	(bug fix)		TP_TO had an issue where it didn't check for an actor in the position the player would land when teleporting to a block at a set distance.
4)	(bug fix)		Cleaned up some startup log outputs and warnings.
5)	(bug fix)		Minecraft client side rounding error caused incorrect message on use command when interacting with the safe block

2021.11.09 Updates
1)	(bug fix) PLACE_TREE_TAP causes nullpointer if an actor disappears during game. Not sure what is cuasing the underlying issue, but the nullpointer is fixed.

2021.11.05 Updates:
1)	(bug fix) Change in Pogoist logic broke some backwards compatibility. Now is backwards compatible.

2021.11.03 updates:
1)	(bug fix) The DELETE command sends back the wrong message when you don't send the correct syntax. 
2)	(bug fix) PLACE minecraft:sapling doesn't decriment the sapling item in player's inventory

2021.10.29 udpates:
1)	(Bug fix) When using an item on the safe or other containers, the action response was always a FAIL even though the action worked.

2021.10.25 updates:
1)	(Bug fix) cannot go through allowed blocks using cardinal movement(ex. MOVE_NORTH, MOVE_EAST, etc), but you can with egocentric movement. This is fixed to allow walking through doors/macguffing using cardinal movement as well. 
2)	(Bug fix) Agent can move onto the same locaiton as an actor. This is not expected. Actors should act as obstacles. This has been fixed for all movement commands.
3)	(Bug fix) (POGO) Traded items are lost if the trade is not valid. Items should not be lost on invalid trade attempts. This has been fixed.
4)	(Enhancement) Added argument for Interact to interact with the actor the agent is facing. ex. INTERACT FACING
5)	(Enhancement) (POGO) Added argument for TRADE to trade with the actor the agent is facing. ex. TRADE FACING minecraft:log 10
6)	(Bug fix) SELECT_ITEM NULL returned FAIL for command result even though the action of selecting null/hand was completed correctly. Now returns a success command result with message "selected hand". Sending the command with no arguments will now be interpreted as sending SELECT_ITEM NULL as well.


2021.10.14 updates:
1)	Bug when using PLACE command while facing an actor causes a null pointer error. Fixed to return failed action.

2021.10.04 updates:
Global
1)	(Bug fix) SENSE_ALL shows correct map size for the room the agent/player is in.
2)	(Bug fix) SENSE_ALL NONAV now shows correct value for isAccessible field.


2021.09.15 updates:
Global
1)	(API Change) (Global) Position property format for entities was changed from a string to an integer array.
    a. Previously entity position reported as: "Pos":"BlockPos{x=5, y=4, z=20}"
    b. Now entity position reported as: "pos":[5,4,20]
    c. Reason for API Change: make position format consistent between entities and the player and other items. Previously, the player and other items were an integer array and entities were a string.
2)	(Bug fix) (Global) All entities are reported in SENSE commands as having the same position, even though they were in different locations. This has been fixed.
3)  (Bug fix) (Global) NOP command removed from commands that external actors ignore, which was causing NOP to not advance time for external actors.

2021.08.31 updates:
Global
1)	(New Feature)(Global)  Color attribute for objects and actors added: Doors, keys, and patrols have a color attribute that is communicated in SENSE_ALL.
2)	(API Change)(POGO) API option to sense actor commands: SENSE_ACTOR_ACTIONS
    a.	Flip Book mode: Ex. “SENSE_ACTOR_ACTIONS”
        i.	Returns List of each actor’s “preWorldState”, “action” and “postWorldState”
        ii.	“preWorldState”: contains a sense_all output from before the action was started
        iii.	“action”: contains “name”(String), “args”(string), “result”(string), and “stepNumber”(int)
        iv.	“postWorldState”: contains a sense_all output form after the action was completed
    b.	Simultaneous mode: Ex. “SENSE_ACTOR_ACTIONS simultaneous”
        i.	Returns the first world state before all actions, a list of all the actions, and the last world state
        ii.	“preWorldState”: contains a sense_all output from before the actions were started
        iii.	“actions”: contains list of all actions each in the format of:
            1.	“name”(String), “args”(string), “result”(string), and “stepNumber”(int)
        iv.	“postWorldState”: contains a sense_all output from after all actions were completed
3)	(API Change)(POGO) API option to advance time without a stepCost: NOP
    a.	The command “NOP” can be sent to advance time by one turn without taking an action for the TA2 agent. This could be useful if the Agent wants to wait for a specific future state without changing location. The NOP does not have a stepCost.
HUGA
4)	(New Feature)(HUGA) Added command for training: Teleports the player anywhere facing any direction. There are no checks on this, you can teleport to any position, and it will always succeed. Including inside blocks.
    a.	Ex. TELEPORT [x] [y] [z] [yaw] [pitch] 
        i.	Yaw: Ranges from 0 to 270 where 0 is south, 90 is West, 180 is North, and 270 is East. 
        ii.	Pitch: Ranges from -90 to 90 where -90 is looking straight up, 0 is looking forward, and 90 is looking straight down.
    b.	This command is disabled by default. To enable this command, you must set the environment variable “PAL_DEV” to “true”.
5)	(Bug fix)(HUGA) Guide Dog blocking path fixed: The Guide Dog pathing was changed so that it will not block walkways.
6)	(New feature)(HUGA) Red Patrols removed from Room 1: Red Patrols no longer spawn in Room 1, so they will not be present near the player re-spawn point.
7)	(New feature)(HUGA) Red Patrols don’t pursue the TA2 Agent: Red Patrols no longer move purposefully towards the TA2 Agent in pre-novelty, they now move completely randomly with respect to the TA2 Agent.
8)	(New feature)(HUGA) Size of held objects increased: The size of held objects, such as the Armor held by Blue Patrols or Keys held in the Locksmith novelty has been increased so that they are clearly visible.
POGO
9)	(New feature)(POGO) Actors using Teleport: External ‘Actors’ will use Teleport for movement if the TA2 ‘Agent’ uses TP_TO, and MOVE if the agent uses MOVE:
    a.	The Actors start each instance defaulting to the MOVE command when they are changing location. If at any point the TA2 Agent uses the TP_TO command, all Actors will subsequently use TP_TO when they are changing location.
    b.	If the TA2 performs teleport then the Rival will use teleport for its movement commands and all teleports for the TA2 agent and Rival will be treated as 1 action, regardless of distance traveled. 
10)	(Bug fix)(POGO) Unlock safe message: When successfully using the blue key to unlock the safe, the incorrect message was returned: “Fail” “using hand on air”. This has been changed to the appropriate successful message.
11)	(New feature)(POGO) Pogoist action sequence: The Pogoist previously stopped after breaking 2 trees, building a tree tap, and placing a tree tap. The Pogoist now continues forward all the way to a Pogo Stick as follows:
    a.	Pogoist gets 2 trees, then crafts and places Tree Tap, gets rubber, mines 2 diamond, mines 2 platinum, trades with TVs, makes Pogo Stick.
12)	(Bug fix)(POGO) Blue key texture pack: Previously the blue key did not render correctly. The texture pack has been updated and the blue key should appear in the agent’s hand and inventory as a blue key.
13)	(New feature)(POGO) Diamond and Platinum Ore amounts: Change Diamond and Platinum ore spawns in Room 1 to be rng between 2-4 instead of always 4.
